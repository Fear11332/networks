	Сети классиффицируются по:
1.Типу коммутации 
2.Типу передачи данных
3.Протяженности 

1.Типы коммутации
	Сети есть с коммутацией пакетов и коммутацией канала
Сети с коммутацией каналов должны установить соединение перед передачей, после этого все данные идут по установленному соединению.
Сети с коммутацией каналов используются в сотовых сетях.
	Сети с коммутацией пакетов используются в компьютерных сетях.Данные делятся на пакеты которые передаются отдельно независимо друг от дурга.
Каждый пакет может пройти через сеть разными путями.Приемуществом сетей с коммутацией пакетов является отказоустойчивость , если выйдет из строя 
одно звено сети то пакет может найти новый путь для доставки данных.При этом есть минус что для каждого пакета при передаче должна решаться задача по маршрутирезации 
для каждого пакета на каждом промежуточном устройстве что дает дополнительную вычислительную нагрузку в отличие от единого канала в сетях с коммутацией канала.

2.Тип передачи данных
	Бывают широковещательные сети, в таких сетях данные передаваемые по сети доступны всем компьютерам в сети.Также есть сети по типу передачи точка-точка, в такой сети данные 
передаются от одного компа к другому , иногда приходится передавать данные через несколько промежуточных узлов.

3.Протяженность
	1.Самые малеьнкие сети(1м) называются персональными
	2.Локальная (10м-1км)
	3.Муниципальная(10км)
	4.Глобальная(100-1000км)
	5.Обединение сетей(10000км)
	
	Топологиая сетей
	Это способ соединения компьютеров между собой для образования комп сети.
Комапьютеры в такой сети-узлы а соединения-ребра
Топологии бывают:
1.Полносвязная, в этом случае каждое уст-во в сети имеет соединение с другими уст-вами в сети.Плюсы данной топологии-есть прямой канал до каждого уст-ва в сети.
Недостаток-большое число соединений
2.Ячеистая,разновидность полносвязной только с исключением некоторых каналов 
3.Звезда, компьютеры подключаются не напрямую а к какому то устр-ву который может передавать пришедший на него сигнал дальше по сети.В качетсве такого про межуточного уст-ва выступает 
сетевое оборудование(коммутор, маршрутирезатор или точка доступа wi-fi)
4.Кольцо, в этом случае каждый комп соединяется с соседними компами и передает данные по кольцу через все промежуточные компьютеры в сети
5.Дерево, при таком типе топологии компьютеры в сети образуют дерево.Для того чтобы передатьь данные от одного устр-ва к другому надо пройти через несколько промежуточных уст-ств
6.Общая шина, все компьютеры подсоединены к общей шине(обычно медному кабелю).Данне которые передаются по шине, доступные всем участникам сети
7.Смешанная топология, обычно на практике используется смешанные тип топологий , допустим звезда с деревом и кольцом
	Важно понимтаь различие физической и логической топологии.
	Физическая-соединение устройств в сети
Логическая-правила передачи данных в этой сети.Части физическая и логическая топологии отличаются между собой, то есть физически уст-ва могут быть соединены одной топологией но передавать данные по другой
	Стандарты в области комп сетей
На данный момент каждое устройство может выходить в сеть и налаживать связь в любым другим уст-вом независимо от того кто производитель, какая ОС используется , какие программы используются.
Но так было не всегда, на раннем этапе развития сетей оборудование одного производителя могло работать по сети только с оборудованием того же производителя.Причин для этого было много:
оборудование несовместимо, несовместимость ПО и разные протоколы передачи данных.Решением данной проблемы стали стандарты.Стандарты на оборудование, программное обеспечение и на протоколы передачи.
Есть два типа стандартов:
1.Юридические стандарты,это стандарты которые принимает организация имеющая на это право 
2.Фактические стандарты, стандарты которые целенаправленно никто не принимал, они устоялиь сами.
	В компьютерных сетях принимается большое количество стандартов, но наиболее важными являются стандарты четырех типов:
1.Международная организация по стандартизации (ISO), приняла стандарт на подход к тому как должны строиться комп сети
2.IEEE,принимает стандарты по технологии передачи данных
3.IAB, принимает стандарты на протоколы интернет
4.W3C, принимает стандарты WEB
	В кратце, если хотите разобраться в оборудовнии то читать IEEE-сетевое оборудование, RFC-протоколы интернет, W3C-web
	
	Основы организации компьютерных сетей
	Допустим мы решили построить сеть ,нам надо решить такие задачи:
1.Надо подумать над многообразием оборудования и программного обеспечения 
2.Такая сеть должна быть надежной и отзакоустойчивой
3.Такая сеть должна иметь возможность развиваться , у такой сети должна быть возможность присоединения нового оборудования и других сетей
4.Нужно понять как распределять ресурсы для обеспечения доступа разных пользователей 
5.В такой сети надо обеспечить качество обслуживания, некоторые данные надо передавать без искажения , для некоторых же это не критично и надо просто обеспечить скорость передачи
6.Важно обеспечить безопастность 
	В целом построение сети-сложная задача. Для ее решения применяется методика декомпозиции-разбиение задачи на более мелкие. Так же в комп сетях был применен подход декомпозиции с использованием шаблона "уровни" 
Компьютерные сети строятся из набора уровней организованного один над другим.Каждый уровень решает одну или несколько задач.На картинке levels.png они отображены примерно.Например уровень1 который ближе всего находится к 
среде передачи данных просто обеспечивает передачу не вникая в содержание этих данных. Уровень предоставляет сервис для вышестоящего уровня а тот в свою очередь может решать более сложные задачи, например поиск маршрута в 
составной сети.Шаблон уровни решает имеет два плюса:каждый уровень решает свою задачу, каждое решение на уровне изолировано от остальных и в случае поломки не нужно будет реструктуризировать а достаточно устраннить моломку на 
соответствующем уровне.Например если надо поменять проводную сеть на беспроводную, надо будет просто заменить среду передачи и оборудование на компьютерах, а все остальное останется как прежде.
	В многоуровневой модели организации сетей используются базовые понятия:
1.Сервис
2.Интерфейс 
3.Протокол
	1.Это ф-ции которые реализует уровень, например уровень может обеспечивать доставку данных одного приложения к другому или поиск маршрута для транспортировки данных
	2.Интерфейс- это примитивные ф-ции которые каждый уровень предоставляет верхнему
	3.Протокол-это правила и соглашения которые используются для связи уровня N одного компьютера с уровнем N другого
Пользователи или вышестоящие уровени взаимодейтсвуют друг с другом через интерфейсы , они понимают что должен делать этот уровень через сервис этого уровня.Протокол же является реализацией взаимодействия и он скрыт от пользователей,
это значит что можно можно заменить один протокол другим и в работе вышестоящих уровней ничего менять не придется.С другой стороны можно менять интерфейсы на одном компьютере и при этом взаимодействовать с другими уровнями если эти уровни
используют один и тот же протокол.Благодаря этому в сети взаимодействуют компьютеры на разных платформах
	Интерфейс предполгает реальное взаимодействие внутри одного компьютера где уроень N вызывает ф-ции уровня N-1.Например программист может использовать интерфейс сокетов, создать сокет и запистаь в него данные. В отличие от интерфейса протокол 
использует виртуальное взаимодействие, уровни на разных компьютерах не имеют возможности взаимодействовать друг с другом напрямую , кроме тех уровней которые соединены и взаимодействуют в физической среде.Единственный способ передать информацию-это 
заголовок протокола соответствующего уровня.
	И так для построения сети используется декомпозиция ее на уровни но здесь есть ряд вопросов:
сколько уровней должно быть в сети?
какие уровни должны быть в сети?
какие ф-ции должны выполняться в этой сети и на каком уровне?
	Это все задается так называемой архитуктурой сети, она задает:
1.Наборы уровней и протоколов сети
2.Интерфейсы не входят в архитуктуру так как они могут быть разные на разных платформах
	Другое полезное понятие это стек протоколов, он:
1.Иерархически организованный набор протоколов достаточный для организации взаимодействия по сети
	Если мы хотим строить крупные сети,нам необходимо соблюдать стандарты огранизации сетей, такие стандарты называются эталонными моделями.Сейчас популярны две модели:
1.Модель взаимодействия открытых сетей (ISO OSI)-юридический стандарт международной орги ISO, включает 7 уровней, протоколы не входят в модель.Отличается хорошей проработкой но на практике не используется
2.Модель TCP/IP-стандарт на основе популярного протокола, всего 4 уровня, основную ценность составляют именно протоколы TCP\IP широко используемые на практике
	Еще одно важное понятие в организации работы сетей это инкапсуляция:
1.Включение сообщения вышестоящего уровня в сообщение нижестоящего уровня.
2.Сообщение при передаче по сети состоит из трех частей: заголовок+данные+концевик
	Допустим имеем сеть из трех уровней, третий уровень формирует и передает сообщение на нижестоящий уровень,второй уровень понимает что такое большое сообщение он не потянет и разбивает его на два сообщения в каждом из которых есть сообщение из второго уровня
далее на первый уровень. Первый уровень добавляет заголовок и так как этот уровень взаимодейтсвует со средой передачи данных то он еще добавляет концевикю.Таким образом сообщение на первом уровне состит из заголовка первого уровня, данных(сообщение второго и третьего уровня) и концевика.
Сообщение передается по среде передачи на другой компьютер на первый уровень , далее удаляется заголовок и концевик и передается на уровень выше длаее удаляются заголовки и сообщения объединяются и так далее
	Модель OSI
Это эталонная модель построения сетей, которая описывает какие уровни должны быть в сети и какие ф-ции выполняет тот или иной уровень.OSI-open systems interconnection или модель взаимодействия открытых систем.Это юридический стандарт принятый международной огранизацией по стандарттизации ISO
	В терминналоги модели OSI открытая система -система построенная в соответствии с открытыми спецификациями , то есть спецификациями которые доступны всем и соответствуют стандартам.В этой терминалогии ос windows является открытой системой, так как она построена на основе откртой спецификации 
который описывает работу интернет.
	Приемущества открытых систем как и любых систем использующих стандраты, является то что мы можем строить такие системы из любых компонентов которые являются совместимыми меджу собой.Мы можем использовать оборудование и по разных производителей , если появилась какая то новая технология, мы можем заменить старое 
оборудование и сеть продолжит работать а также мы можем объединять сети в одну крупную.
	Согласно OSI, сети должны состоять из 7 уровней и эта модель описывает назначение каждого из уровней.Модель не является сетевой архитуктурой так ак не включает описание протоколов которые определяются в отдельных стандартах.На практике модель взаимодействия открытых систем не используется.Однако плюсом данной модели является 
хорошая теоритическая проработка в вопросов сетевого взаимодействия, поэтому модель часто используется в качестве общего языка для описания того как должны строиться сети разных видов.Модель взаимодействия открытых система имеет 7 уровней которые расположены друг над другом , на картинке OSIlevels.png.Обычно нумерация уровней начинается от среды передачи данных.
1.Физический уровень
2.Канальный
3.Сетевой
4.Транспортный
5.Сеансовый
6.Представления 
7.Прикладной
	1.Физический уровень нужен для передачи битов по физическому каналу связи.Этот уровень никак не анализирует информацию которая передается по каналу.Основная задача физического уровня-представление битов в виде сигналов для передачи данных.Такое представление будет разным для меди, оптики и прочего.
	2.Канальный уровень находится над физическим и передает уже не отдельные биты а целые сообщения , он должен уметь выделять в потоке бит приходящих с физического уровня отдельные сообщения.Также канальный уровень обеспечивает обнаружение и коррекцию ошибок.
В широковещательных сетях, где один и тот же канал связи используется для передачи данных разными компьютерами, канальный уровень также дополнительно обеспечивает физическую адресацию для того чтобы мы могли узнать к какому из компьютеров из сети необходимо отрпавить данные.Вторая ф-ция канального уровня в широковещательной сети-упрваление доступом к разделяемой среде 
передачи данных, чтобы в каждый момент времени  данные передавал только один комп
	3.Сетевой уроень предназначен для построения крупных составных сетей на основе разных сетевых технологий.На этом уровне обеспечивается согласование различий в разных технологиях канального уровня.Обеспечивается общая адресация с помощью глобальных адресов которые позволяют однозначно определить комп в составной сети, независимо от того какая технология канального уровня в
в нем используется, и какой тип адресации в этой технологии применяется.Также на сетевом уровне выполняется маршрутизация-поиск маршрутов в крупной составной сети через промежуточные узлы
	4.Транспортный уровень обеспечивает передачу данных между процессами на разных хостах(компьютерах).Особенностью транспортного уровня является то что он может обеспечить большую надежность чем то сетевое оборудование которое используется для передачи данных.Наиболее популярный сервис который предоставляет транспортный уровень-
защищенный от ошибок канал связи с гарантированным порядком следования сообщений.В отличие от предыдущих уровней которые работают по принципу звеньев в цепи, при котором информация передается от одного устройства к дргому, транспортный же уровень является сквозным-сообщения передаются напрямую от процесса отправителя к процессу получателю.Поэтому транспортный уровень часто называют 
сетенезависимым, потому что на нем происходит изоляция от сетевого оборудования которое используется для реальной передачи данных.
	5.Сеансовый уровень заключается в создении сеанса связи, он может использоваться для определения очередности передачи сообщений в задаче управления диалогом.Например если у нас есть видеоконференция из нескольикх человек.Если они начнут говорить одновременно то никто ничего не услышит, сеансовы уровень определяет очередность того кто когда будет говорить чтобы все другие могли слышить.
Также на сеансовом уровне предполагалось решать задачи одновременного доступа к некоторым критическим операциям.Например если два сетевых соединения одновременно попытаются изменить баланс банковского счета то в результате деньги на счету могут быть утеряны.Последовательное выполнение критических операций также входит в задачи  сеансового уровня и реализуется с помощью управления маркерами.
По задумке разработчиков модели взаимодействия открытых систем, сеансовый уровень должен обеспечивать защиту от разрывов сетевого соединения и обеспечивать возможность продолжения работы после восстановления соединения, для этого используется ф-ции синхронизации.Однако на практике сеансовый уровень не используется.
	6.Представления-его задача преодоставлять данные в таком виде которые понятны как отрпавителю, так и получателю.Необходимо согласовывать не только формат даныых , но и смысл.Например разные компьютеры могут использовать разную кодировку для представления символов или разные форматы хранения чисел(LSB или MSB).
Преобразования из разных форматов должны обеспечиваться при передаче по сети.Например снимается трубка сетевого телефона, туда говороится на русском, сеть это переводит в промежуточное представление , например на китайский язык, передает данные на китайском языке , человек на другом конце снимает трубку и сеть переводит автоматически данные с китайского языка на нужный язык получатсля и получатель 
слышит нужный язык, но на данный момент это не реализовано.На практике широкое распространение получило шифрование и дешифрование которое реализовано на уровне представления.Например TLS/SSL
	7.Прикладной уровень, это то , ради чего строится сеть, это набор приложений которые могут использовать пользователи сети.В качестве примера можно привести web-страницы, соц-сети, видео и аудио связь, электронная почта и тд.
	Для большенства уровней модели взаимодействия открытых систем придумали  свое название единиц передаваемых данных, каждая единица изображена на картинке data_transfer_unit.png.
	На физическом уровне-это биты, на канальном-кадр, на сетевом-пакет, на транспортном-сегмент/дейтаграмма, на сеансовом-сообщение и далее до прикладного включительно-сообщение.
	На разных уровнях модели взаимодействия открытых систем работает разное оборудование:
1.физический-концентраторы
2.канальнй-коммутаторы, точки доступа
3.сетевой маршрутизаторы
Уровни начиная с транспортного в модели OSI работают на хостах и на сетевом оборудовании их нет
	Модель tcp/ip
	Модель tcp/ip стала стандартом дефакто на основе протокола TCP/IP, никто специально не  принимал его, просто стек протоколов TCP/IP стал слишком популярным, все стали искользовать стек tcp/ip и модель.Стек протоколов TCP/IP создавался для глобальных сетей для объединения больших компьютеров по телефонным линиям связи соединения точка-точка.Со временем появлились новые технологии и стек TCP/IP не так то 
просто было адаптировать.Стало понятно что стека протоколов недостаточно, необходима модель, которая говорила бы о том как люди должны строить сети на основе разных технологий чтобы в этих сетях мог работать стек TCP/IP.
	Модель TCP/IP включает четыре уровня
1.Сетевых интерфейсов-это скорее не настоящий уровень, а интерфейс, который обеспечивает связь с различными сетевми технологиями, например ethernet,wi-fi и тд
2.Интернет-который по задачам аналогичен сетевому уровню в моделе взаимодействия открытым систем(обеспечивает поиск маршрутов в составной сети, построенной на освное разных технолоний) 
3.транспортный-также как и в OSI , обеспечивает связь между процессами на разных компьютерах
4.прикладной-вкючвает в себя ф-ции трех уровней модели OSI(сеансовый,представления, прикладной).Считается что, если приложению какие то ф-ции уровня представления или сеансового уровня,то оно само должо их реализовывать.
	Сравнение OSI и TCP/IP
	Модель OSI:
	+1.хорошая теоритическая проработка
	-2.протоколы не используются
	Модель TCP/IP:
	+1.протоколы широко применяются 
	-2.ограниченная модель, подходит только для описания сетей на основе стека tcp/ip(теоритическая проработка не очень хороша)
	Применение:
OSI-модель для описания разных типов сетей
TCP/IP-протоколы, основа интернет
	Стек протоколов TCP/IP состоит из четырех уровней:
	Они описаны на картинке tcp_levels.png
1.Сетевые интерфейсы:предназначен для взаимодействия с сетевыми технологиями , формально не входящими в стек tcp/ip
	1.ethernet
	2.wi-fi
	3.DSL
2.сетевой:на этом уровне для передачи данных используется протокол ip а также несколько доп протоколов, которые обеспечивают работу сетей:
	1.ICMP
	2.ARP
	3.DHCP
3.Транспортный:на котором в стеке tcp/ip работают два протокола:
	1.TCP-которые обеспечивает передачу данных с гарантией доставки
	2.UDP-позволяет доставлять данные быстро но без гарантии доставки
Стек протоколов TCP/IP называется так в честь двух популярных протоколов транспортного(TCP) и сетевого уровня(IP) 
4.Прикладной:на нем находятся протоколы для решения тех или иных задач:
	1.HTTP:используется для веб
	2.SMTP:для передачи почты
	3.FTP:для передачи файлов
	4.DNS:для назначения ip-адресам более понятных для людей доменных имен
	Место в модели OSI
Физический уровень-самый нижний уровень в модели взаимодействия открытых систем, его задача-передача потока бит в среде передачи данных. Физический уровень не вникает в смысл информации которую передает и никак ее не анализирует.Единица передачи данных на физическом уровне называется бит.Основаня задача фзического уровня в представлении бит информации в виде сигналов передаваемых в среде.
	Модель канала связи.
Мы воспользуемся организацией сетей в виде уровней каждый из которых предоставляет сервис вышестоящему уровню и обеспечивает изоляцию решений. Мы будем считать что фзический уровень передает биты, как он это делает нам это не важно. Нам важно что у нас просто есть канал связи по которому мы можем передавать некоторые сообщения от отправителя к получателю.
У канала связи есть важные характеристики:
1.Пропускная способность, которая измеряется в бит/с
2.задержка-она говорит о том , сколько времени пройдет прежде чем получатель получит сообещение отрпавителя
Задержка и пропускная способность характеризуют скорость работы канала
3.количество ошибок-то , насколько часто возникают ошибки.Если ошибки возникают часто то протоколы или сетевые технологии должны корректировать ошибки.Если ошибки-редкое явление, то их можно исправлять на вышестоящих уровнях.Само же сетевое оборудование может не давтаь гарантий по доставке и отсутствию ошибок.
	В зависимости от направления по которому можно передавать данные , каналы связи бывают трех типов:
1.симплексный канал связи-можно передавать данные только в одну стророну
2.дуплексный-можно передавать данные в обе стороны одновременно
3.полудуплесный-можно передавать данные в обе стороны, но по очереди 
	В сетях раньше использовалась и используется сейчас большое количество разных сред передачи данных:
1.Кабели:
	1.телефонный-использовался в самом начале, когда данные передавались по телефонным линиям
	2.коаксиальный кабель(классика ethernet)
	3.витая пара-сейчас для построения комп сетей используются скрученные между собой медные кабели которые называются витой парой
	4.оптический кабель-для передачи данных используется свет.
	5.провода электропитания 220В
2.беспроводные технологии:
	1.радиоволны-сотовые сети и wi-fi
	2.инфрокрасное изслучение
Сейчас для построения сетей часто применяются:витая пара, оптика, радиволны
	Витая пара-набор кабелей в одной оболочке, кабели скручены между собой в пары, дабы снизить помехи. В одном кабеле как правило находится 4 пары. 
	Оптические кабели-для передачи данных используются тонкие световоды.Каждый световод покрывается оболочокй и несколько световодов объединятся в один кабель.
	Радиоволны, все чаще для передачи используются технологии для беспроводной передачи данных.В отличие от кабелей сигнал в среде распространятеся в разных направлениях.Один и тот же сигнал могут принимать несколько приемников также, как это происходит с обычными радиоприемниками. Если несколько источников радисигнала передают сигнал рядом друг с другом, то сигналы искажаются.По этому использование
радиволн регулируются законодательством. Разные разделы спектра выделены для использования под разные задачи.Например GSM-900мгц, однако этот диапазон не может использовать кто угодно, для этого нужна лицензия.Для работы сетей wi-fi используется две частоты:2,4 ггц и 5 ггц, не требуется лицензия, другие приборы также работают могут работать на тех же частотах что является проблемой.   
				Ошибки в каналах связи
	среда передачи данных		частота возникновения ошибок
	оптический кабель			очень редко так как сложно повлияеть на свтоводы в темной оболочке
	медный кабель				редко
	радиволны 					часто 
Для представления информации в виде сигнала для передачи по каналам связи есть два подхода:
1.Прямоугольные импульсы(или цифровые)
2.синусоидальные волны(или аналоговый)
	1.Цифровыне сигналы используются при передаче данных по медным проводам.Самый простой способ представить информацию-представить что отсутствие повышенного напряжения-0 а присутствие-1
	2.Для представления информации в аналоговом виде используется модуляция, можно менять частоту сигнала, фазу и амплитуду
	Канальный уровень
Основные задачи канального уровня-передача сообщений по каналам связи, такие сообщения называются кадры.Именно на канальном уровне орпеделяется где в потоке бит начало сообщения и где конец сообщения.Также на канальном уровне производится обноружение и коррекция ошибок.Для некоторого типа каналов с множественном доступом, где одну и ту же среду передачи могут использовать несколько устройств, канальный уровень 
решает также доп задачи:
	1.адресация, если на канале связи есть несколько устройств, нам нужно определить какому именно устройству предназначено сообщение 
	2.согласованный доступ к каналу,если все устройства начнут передавать данные одновременно, то данные в канале связи исказятся и не смогут быть приняты. 
	Давайте начнем рассмотрение канального уровня с работы с кадрами.Как говорилось ранее, физический уровень передает потоки бит по каналу связи ,на канальном же уровне нам нужно передавать не отдельные биты а сообщения.Тогда первая задача канального уровня , как из потока бит приходящих по среде передачи данных выделить сообщения.
Рассмотрим как формируется кадр на канальном уровне(картинка build_frame.png).Положим что у нас есть два компьютера хост1 и хост2, также есть три уровня:сетевой, канальный и физический.Канальный уровень получает данные от вышестоящего сетевго уровня(пакет), затем добавляет к нему заголовок и концевик.Именно это сообщение:заголовк канального кровня ,сетевой пакет и концевик канального уровня и является кадром.Это сообщение 
передается через физ уровень другому хосту по среде передачи данных и поступает на канальный уровень второго хоста.На принимающем компе читается заголовок и концевик канального уровня , извлекается сетевой пакет и передается сетевому уровню второго хоста для последующей обработки.
	Как в потоке бит определить где начинается и где заканчивается отдельные кадры?Для этого было разработано несколько методов:
1.Указатель количества байт
2.вставка байтов или битов 
3.также для этой цели могут использовать средства физического уров-ня.
	Самый простой способ обозначить где начинается и заканчивается кадр-это в начало каждого кадра поместить его длину(картинка frame.png).На этой картинке находятся три кадра, в начале каждого кадра указано количество байтов.Такой подход хорош тем что прост в реализации, однако недостатком является то, что данные при передаче по сети могут искажаться, в том числе может исказиться длина кадра в байтах.Предположим что в результате передачи 
первого кадра произошло искажение, и вместо длины кадра 6 байт получатель получил другую длину кадра, например 7 байт.Вывод, если произошла хотя бы одна ошибка, то последовательность чтения будет нарушена.Поэтому на практике тайо метод не применяется.
	Другой метод определения начала и конца кадра-вставка в начало и конец кадра специальной последовательности байтов или бит.Вставка байтов использовалась в протоколе BSC комапнии IBM в которых передовались обычные символы.Протоколы HDLC и PPP-биты,эти протоколы более современные.В них в начало и конец каждого кадра добавляется последовательность бит состоящая из нуля, шести единиц и нуля(тут может возникнуть проблема если в последовательности встречается 
шесть или более подрядидущих единиц.
	Еще одним способом определения начала и конца кадра яляется-использование средств физического уровня, он применяется в технологии ethernet.
В первом варианте технологии ethernet(классический ethernet) использовалась преамбула-это последовательность данных которая передается перед началом каждого кадра
В более поздних технологиях ethernet(fast ethernet) используется другая схема кодирования-это избыточное кодирование которое позволяет обнаружить ошибки.
	Какие могут быть варианты обнаружения и исправления ошибок на канальном уровне:
1.Самый простой способ-это просто обнаружить ошибку, например с помощью контрольной суммы или какого то другого алгоритма
Если технология канального уровня использует обнаружение ошибок, то кадр в котором была обнаружена ошибка просто отбрасывается.Никаких попыток восстановить данные не производится.Более сложный механизм-это исправление ошибок.Чтобы иметь возможность исправить ошибку,нам надо дополнительно добавить к данным какую-то информацию с помощью которой мы сможем обнаружить ошибку и восстановить правильные данные.
2.Другой вариант исправления ошибок при передаче данных-это повторная отправка тех кадров в которых произошла ошибка, он используется совместно с обнаружением ошибок когда отправитель передает данные получателю, получатель обнаруживает ошибку в данных, но вместо того чтобы исправить ошибку , отправитель передает данные еще раз.Разберем пример исправления ошибки с попощью повторной отправки сообщения.
Картинка try_again_send_message.png.Отправитель передеает сообщение , получатель получает его и если нет ошибок, передает подтверждение о получении.Далее отправительно снова передает сообщение допустим с ошибкой.Получатель получает его и понимает что оно с ошикой, сообщение подтверждающее получение не отправляется и отрпавитель включает таймер подтверждения, после того как время ожидания кончилось, отправитель отрпавляет сообщение снова.
После этого получатель отсылает сообщение о подтверждении получения. 
	Есть два метода повторной отправки:
1.Остановка и ожидание(пример выше основан на нем)-отправитель передает кадр и останавливается ожидая подтверждения.Следующий кадр передается только после того как пришло сообщение подтверждения о получениин предыдущего сообщения.Такой метод используется в технологии канального уровня wi-fi
2.Скользящее окно-отправитель передает несколько сообщений один за другим, не дожидаясь подтверждения.Количество сообщений которое можно передать не дожидаясь подтверждения, называется размером окна.В этом случае получатель передает подтверждение для целого последнего полученного сообщения.Такой метод хорошо работает на высокоскоростных каналах связи.Сейчас нет технологий канального уровня который использует этот метод, но используется на транспортном уровне в протоколе TCP
	Итак, есть несколько вариантов что делать c ошибками, можно их обнаруживать и исправлять с помощью кодов исправления ошибок либо с помощью повторной доставки сообщений, также мы можем обнаруживтаь ошибки на канальном уровне либо на вышестоящих уровнях.Возникает вопрос как это лучше делать?Как показала практика, на каналах где ошибки возникают редко, например данные передаются по проводам, то на канальном уровне лучше использовать простое обнаружение ошибок.Если же ошибки в среде 
передачи данных происходят часто, например, в случае wi-fi где используется электромагнитное излучение и много помех,то ошибки эффективнее обнаруживать и исправлять прямо на канальном уровне.
	Модель взаимодейтсвия открытых систем разрабатывалась когда на практике использовались только каналы связи точка-точка, это было последовательные линии связи, которые объединяли большие компьютеры.Затем появились другие технологии канального уровня на освное разделяемых каналов связи, когда к одной и той же среде передачи данных подключено несколько устройств.В таких каналах появлились такие задачи, которые небыли учтены в моделе взаимодействия открытых систем, поэтому пришлось 
поменять эту модель и разделить канальный уровень на два подуровня:
1.подуровень управления логическим каналом LLC-отвечает за передачу данных, формирование кадров, обработку ошибок.Этот уровень является общим для разных технологий канального уровня 
2.подуровень управления доступом к среде MAC-этот подуровень используется только если у нас технология канальнго уровня с разделяемым доступом.Если у нас есть несколько устройств подключенных к одному каналу связи, то при передаче данных мы должны явно указать какому устройству данные предназанчены, для этого испольуется адресация канального уровня.Также необходимо обеспечить корректное совместное использование разделяемой среды.Этот подурвень является специфическим для разных технологий.
	Какие дополнительные услуги предоставляет подуровень LLC кроме передачи данных:
1.Мультиплсексирование-передача через одну технологию канального уровня, нескольких типов протоколов вышестоящего уровня
2.управление потоком, если у нас в сети устройства которые работают с разной скоростью,то их работа уравновешивается 
	Зачем обеспечивать согласованный доступо к разделяемому каналу связи? Предположим у нас есть общая среда передачи и несколько устройств подключенных к ней, они начали одновременно передавать данные.В таком случае данные исказятся и не могут быть прочитаны из среды , это называется коллизия.Подуровень mac обеспечивает управление доступом к разделяемой среде.В один и тот же момент времени канал связи для передачи данных должен использовать только один отправитель, в противном случае произойдет 
коллизия и данные исказятся 
	Методы управления доступом к разделяемой среде:
1.Рандомизированный-из N компьютеров выбирается один с вероятностью 1/N(ethernet,WI-FI)
2.Определение правил использования среды, например в технологии Token Ring данные может передавать только одно устройство у которого сейчас находится токен.После передачи данных, устройство передает токен дальше 
	Технология ethernet-на данный момент это самая пополярная технология для создания проводных сетей, совместно с wi-fi используется для органзиации большей части современных сетей.
В модели OSI ethernet находится на физическом и канальном уровне, при чем на канальном уровне используются оба подуровня LLC/MAC.
	Есть большое количество вариантов технологий ethernet:
название 				скорость 				кабель 												стандарт IEEE
ethernet				10мб/с					толстый,тонкий витая пара , коаксил , оптика		802.3
fast ethernet			100мб/с					витая пара, оптика									802.3u
gigabit ethernet		1гб/с					витая пара,оптика									802.3z,802.3ab
5g ethernet				2,5гб/с,5гб/с			витая пара											802.3bz
10g ethernet			10гб/с					витая пара, оптика									802.3ae,802.3an
100g ethernet			100гб/с 				оптика 												802.3ba 
	Под названием ethernet скрываются две разные технологии:
1.Классический ethernet, использует разделяемую среду передачи данных.Эти данные доступны всем компьютерам в сети.Классический вариант технологии ethernet использовался с первой техноллогии ethernet и по gigabit ethernet

2.Коммутируемый ethernet, использует соединение точка-точка, коммутируемый ethernet появился во втором варианте технологии fast ethernet, и начиная с 10g ethernet и выше это единственный вариант технологии.
	Почти все современное оборудование поддерживает как классический так коммутируемый ethernet
	Начнем с изучение ethernet с классического ethernet, который исторически появился смамым первым.В первом варианте классического ethernet использовалась топология общая шина, вдоль всех компьютеров шол коаксиальный кабель который соединял все компьютеры между собой (картинка classic_ether.png).Такие сети были проблемными так как если происходил разрыв соединения где то в сети, то переставала работать вся сеть и найти проблемное место было очень сложно.Поэтому со временем появлися второй вариант технологии ethernet на основе 
специальных устройств-концентраторов(hub).Физическая топология в такой сети-звезда, все компы подрубаются к одному концентратору.Логическая же топология-общая шина, так как сигнал который поступает на один порт концентратора, передается на все порты.Приемущество концентраторов заключается в том, что если выйдет из строя кабель или сетевой адаптер, то перестает работать сеть всего на одном компе. Найти такою неисправность в такой сети достаточно легко на освное цветовой индикации на портах конецентратора.
	Технология ethernet включает физический и канальный уровень модели OSI, на физическом уровне технология ethernet содержит описание передачи сигналов по трем разным типам кабелей:коаксиал, витая пара, оптика
На канальном же уровне содержатся методы доступа и протоколы, эти методы доступа работают одинаково независимо от типа кабеля
	На канальном уровне для передачи данных используются кадры, в ethernet есть три типа кадров:
1.экспериментальная реализация ethernet в xerox
2.ethernet 2-фирменный стандарт ethernet компаний dec, intel, ethernet
3.юридический стандарт ethernet-ieee 802.3, к сожалению юр стандарт принимался достаточно долго, поэтому в тот момент уже использовался формат кадра ethernet 2
	Формат кадра ethernet 2 состоит из трех частей:заголовок, данные и концевик(на картинке ether2frame.png схематически изображен кадр).
Заголовок содержит адрес получателя, адрес отправителя и тип протолока следующего уровня.В поле тип содержится код протокола от которого получены данные (0800-IPV4, 86DD-IPV6, 0806-ARP),с помощью этого поля получатель сможет понять что делать с данными, которые находятся внутри кадра ethernet, какому протоколу следующего уровня передавать эти данные для обработки.Поле концевик используется для проверки корректности доставки данных. В ethernet используется контрольная сумма, при получении кадра получатель рассчитывает контрольную сумму 
и проверяет совпадает она с концевиком или нет.Если сумма не совпадает то кадр отбрасывается , при этом получатель никак не уведомляет отправителя об отброшенном кадре.Считается что в проводной среде особенно в оптике, ошибки происходят редко и если они произошли, то могут обработаться протоколами вышестоящего уровня.
	Поле данные кадра ethernet, содержит данные которые получены от протолока вышестоящего уровня.У этого поля есть два ограничения по длинне сверху и снизу. Максимальная длина может быть 1500 байт.Существуют доп стандарты(jumboframe) которые позволяют отправлять кадры большего размера (до 9000байт), другое ограничение размера поля данные снизу-96 байт
	МАС адреса
МАС адреса используются на канальном уровне на подуровне MAC(подуровень управления доступом к среде),если у нас в среде передачи несколько устойств, то нам необходимо понять какому устр-ву необходимо передавать данные.Именно для этой цели используются MAC-адреса, с помощью них мы понимаем кому конкретно предназанчены те или иные данные.МАС адреса регламентированы IEEE в стандарте группы 802.В эту группу входит большое число стандартов локальных сетей, наиболее поплярны сейчас стандарты ethernet(ieee 802.3) и wi-fi(ieee 802.11).ethernet и wi-fi используют 
mac-адреса.Длина мас-адреса 6 байт.Пример записи мас-адреса:1с-75-08-d2-49-45.
	Есть три типа мас-адресов:
1)индивидуальный(unicast)-когда вы передаете данные на индивидуальный мак адрес то эти данные получает только один компьютер 
2)групповой(multicast)-если вы передаете данные на групповой мак, то эти данные получают компы которые входят в группу.Для указания того что мак групповой, его первый байт является 01
3)широковещательный(broadcast)-это все 6 байт вида ff-когда данные отсылаются на широковещательный адрес то данные получают все компы в сети
	В одном сегменте сети все мак-адреса должны быть уникальны, иначе мы не поймем кому адресовать данные.Если в сети есть минимум два устройства с одним и тем же мак адресом, какое-то из них работать не будет(какое именно, не оговорено,возможно не будут работать все устройства).
Как назначаются мак-адреса?Есть два способа:
1)централизованный(по умолчанию используется)-при таком способе назначения адресов, сами производители записывают мак-адрес в сетевой адаптер.Этот адрес назначается по правилам стандарта IEEE 802
2)локальный-назначаются вручную администратором сети 
Индикатором способа нзначения-второй бит старшего байта мак-адреса:
1)0-адрес централизованный
2)1-адрес локальный
	Как при централизованном назначении адреса не повторяются? Для этого реализована иерархическая схема, мак-адрес разделен на две части:
1)первые 3 байта-уникальный идентификатор организации 
2)следующие 3 байта-назначает производитель оборудования.Уже сам производитель отвечает за индивидуальность 
	Как посмотреть мак-адрес:
1)windows-ifconfig /all
2)linux-ifconfig или ip link
	Ethernet.Метод доступа к разделяемой среде CSMA/CD
Ethernet-доминирующая в настоящее время технология для построения проводных локальных сетей.Ethernet а также wi-fi используются сейчас для построения большенства компьютерных сетей.Есть два варианта технологии ethernet, мы рассмотрим классический ethernet, в котором для передачи данных используется разделяемая среда с топологией общая шина.Это либо реальная общая шина  в виде коаксиального кабеля, либо общая шина стянутая в точку концентратор.В любом случае данные котороые поступают в разделяемую среду становятся видны сразу всем участкникам в сети.В такой архитектуре сети  
необходимо чтобы в один и тот же момент времени данные передавал только один компьютер.Если данные будет передавать несколько компьютеров, то произойдет коллизия и данные будут потеряны.
	Рассмотрим пример:пусть имеется 4 компа в разделяемой среде с топологией общая шина.Превый кома начал передавать сигнал, но он еще не достиг остальных участников сети.В это время передачу сигнала начал второй комп.Через некоторое время два наложаться, и нельзя будет разобрать сообещния ни одного из отправителей.Именно такая ситуация называется коллизия, когда сигнал от нескольких устройств накладываются и нельзя прочитать данные.
Для того чтобы коллизий не произошло и данные передавались успешно,в сетях, где используется разделяемая среда, необходимо применять какой то метод управления доступом к среде.Этот метод должен сделать так, чтобы в одном и то же время данные в среде передавал только один комп.В классическом ethernet используется метод доступа к разделяемой среде CSMA/CD(множественный доступ с прослушиванием несущей частоты и обнаружения коллизий):
1)множественный доступ-означает что у нас есть какая то разделяемая среда, которую используют несколько компов 
2)прослушивание несущей частоты-для избежания коллизий, компьютеры передают данные только если среда свободна, прослушивание несущей частоты-способ орпеделения свободна ли среда для передачи или нет
3)обнаружение коллизий-если два компа начали передавать данные одновременно, то происходит коллизия.
Обнаружение коллизий:
Компьютеры передают и принимают данные одновременно и сравнивают данные между собой.Если сигнал который комп передает в сеть отличается от того который он принимает, значит произошла коллизия.Входной сигнал меняется из-за того что какой то другой комп передает сигнал 
В ethernet если возникла коллизия, то комп останавливает передачу и передает в сеть jam-последовательность-это сигнал который существенным образом искажает все данные которые передаются по сети, усиливает коллизию для того чтобы все участники сети поняли что возникла коллизия 
	Модель CSMA/CD
Рассмотрим картинку CSMA.png.Работа по этому методу состоит из трех методов:
1)период передачи-в этот период какому то компу удалось захватить доступ к разделяемой среде и начать передачу данных
2)период конкуренции-возникает когда несколько компов пытаются начать передавать данные, из-за такой передачи возникает коллизия, передача данных останавливается.Так продолжается некоторое время пока одному из участников не удастся захватить разделяемую среду и после начинается период передачи
3)период простоя-в этот период никому данные передавать не нужно и среда свободна 
Как работает период передачи? Передавать какие то кадры комп может если в среде нет несущий частоты.Комп проверил что несущий частоты нет, значит он может начинать передачу кадра.Передача состоит из следующих частей(картинка transmission_time.png):
1)преамбула-передается первой, которая позволяет отправителю и получателю синхронизироваться и выделить кадр
2)сам кадр
3)далее выдерживается пауза которая называется межкадровый интервал

1)в первом варианте ethernet имеет следующий формат:
	1.1)длина 8 байт
	1.2)первые 7 байт:10101010, за счет этого обеспечивается синхронизация отправителя и получателя
	1.3)последний байт:10101011-конец преамбулы за которым следует начало кадра
1.2)передача кадра в классическом ethernet.Компьютер подключенный к разделяемой среде сначала передает преамбулу, потом начинается передача кадра.Все участники среды начинают читать кадр и записывать данные в буфер.Все компы читают первые 6 байт кадра, в которых находится мак-адрес получателя, после этого компы сравнивают мак-адрес получателя со своим,и тот комп который опознал свой адрес, продолжает записывать данные в буфер.Все остальные из буфера инфу стирают и не продолжают принимать данные.Также есть режим работы сетевого адаптера(неразборчивый), в котором адаптер принимает все кадры которые передаются в среде 
независимо от того для какого мак-адреса они предназначены 
3)после окончания передачи кадра, комп отправитель выдерживает межкадровый интервал, это нужно чтобы один комп не захватил монопольно канал передачи и не начал передавать кадр за кадром, недавая ничего передавать другим участникам сети. Также интервал нужен для настройки сетевых адаптеров в исходное состояние и подготовить их для принятия и передачи следующего кадра.
2)когда передача кадра завершена и выдержан межкадровый интервал, другие компы могут попытаться начать передавать данные.Если в это время данные захочет передавать несколько компов, то происходит период конкуренции.Компы пытаются захватить канал для передачи данных.Как мы говрили ранее компьютер, когда начинает передавать данные, он одновременно их принимает чтобы понять не возникла ли коллизия.В период конкуренции, когда данные передают одновременно несколько компов, происходит коллизия.По этому компу неоходимо выдержать паузу и продолжить попытку передачи через некоторе время.Однако если все компы будут ждать одинаковое время ,то период конкуренции никогда не закончится.Компы обнаружат 
коллизию и будут выдерживать паузу и тд.Поэтому время выбирается случайным образом
	Коммутатор ethernet
Есть два типа технологий ethernet, которые очень сильно отливаются друг от друга несмотря на общее название, это классический ethernet и коммутируемый ethernet
	Классический ethernet
Повяился первый в 1973, использовал разделяемую среду.Сначала это была реальная разделяемая среда с коаксиальным кабелем, который шел от одного компа к другому, потом коаксиал был заменен на концентраторы.В таких сетях возможны коллизии. Для предотвращения коллизий используют метод CSMA/CD.Недостатками сети являются:плохая масштабируемость, низкая безопастность 
	Коммутируемый ethernet
Появился в 1995 году, нет разделяемой среды и использовать соединение точка-точка чтобы исключить коллизии.Для этого пришлось придумать новые устройства-коммутаторы(switch).Конецентраторы и коммутаторы внешне очень похожи, не внутренне отличаются очень сильно.
1)концентратор-топология внешняя шина, все порты внутри соединены друг с другом. Работает на физическом уровне, передает электрические сигналы, которые поступают на один порт, на все остальные. 
2)Внутри коммутатора полносвязная топология, которая обеспечивает соединение всех портов друг с другом напрямую по технологии точка-точка. Коммутатор работает на канальном уровне,это означает что он анализирует заголовок канального уровня, извлекает от-туда адрес получателя и передает данные только на тот порт к которому подключен получатель.
	Для понимания работы коммутаторов, необходимо разобраться с тремя понятиями:
Таблица коммутации которая есть в каждом коммутаторе, описывает к какому порту коммутатора какие компы подключены. Для того чтобы узнать мак-адреса компов которые подключены к его портам, коммутатор использует алгоритм обратоного обучения. После того как таблица коммутации заполнена, для передачи данных используется алгоритм прозрачного моста.
	Начнем с таблицы коммутации
В простейшем случае таблица коммутации состоит всеголишь из двух столбцов:
1)порт коммутатора 
2)мак-адреса компов которые подключены к этому порту
	Картинка commutation_table.png, в реальности таблица выглядит сложнее.Как коммутаторы узнают мак-адреса компов которые подключены к его портам?Для этого используется алгоритм обратного обучения.Пусть у нас коммутатор у которого 8 портов.Коммутатор только что включился и ничего не знает про компы, поэтому таблица коммутации пустая. Коммутатор принимает все кадры которые приходят на его порты и анализирует заголовок канального уровня.Из этого заголовка он извлекает мак-адрес отправителя.Поэтому коммутатор понимает что к данному порту подключен такой то комп с таким то мак-адресом.Так происходит пока вся таблица не будет заполнена всеми участниками сети.
Для передачи кадров внутри коммутатора используется алгоритм прозрачного моста.Мост-это предшественник коммутатора который нужен для объединения нескольикх сетей классического ethernet.Если в сети классического ethernet очень много компов, то возникает много коллизий и данные передаются медленно. Мосты использовались для разделения крупных сетей на несколько маленьких сетей, внутри которых коллизий возникало меньше и данные передавались быстрее.Мост был подключен к двум или нескольким сегментам классического ethernet, принимал все кадры, но передавал их в другую сеть только если они предназначались компу из той сети.Было придумано несколько типов мостов, но для коммутаторов был выбран режим работы
так называемого прозрачного моста. Это мост, который незаметен для сетевых устройств, то есть у него нет своего мак-адреса и он не требует настройки, именно в таком режиме работает коммутатор который по сути является мостом с большим количеством портов,он не требует настройки-вы можете подключать к нему компы и данные сразу же будут передаваться. 
	Как работает алгоритм прозрачного моста?предположим вся таблица коммутации заполнена, коммутатор принимает кадры, анализилизирует заголовки канального уровня , достает от-туда мак-адрес получателя и ищет этот адрес в таблице коммутации.Дальше кадр передается на порт, адрес получателя которого стоит в таблице коммутации. Если же пришел кадр в котром адрес, которого нет в таблице коммутации, то коммутатор работает как конецентратор, отправляя кадр на все порты, кроме того откуда кард поступил, в надежде что к какому то из портов подключен комп получателся, просто по каким то причинам он еще не передавал данные и по этому его мак-адреса нет в таблице.
Если используется сеть, состоящая только из коммутаторов, то в такой сети коллизии не возникают. Исключением является полудуплексное соединение, при котором передача данных в одно и то же время возможна только в одну сторону.Если же к какому то из портов коммутатора подключен концентратор, то этот порт подключается к общей среде и на нем могут возникать коллизии также как и в классическом ethernet. 
	VLAN-виртуальная локальная сеть, технология которая позволяет разделить одну физическую сеть на несколько логических частей которые работают независимо друг от друга.Технология VLAN реализуется коммутаторами и находится на канальном уровне модели OSI.
	Зачем же разделять одну сеть на несколько изолированных частей?Это часто-встречаюшаяся задача , например, когда мы строим сеть для крупной организаии.Вполне может оказаться что каждый отдел захочет свою сеть которая будет отделена от остальных.Конечно можно создавать отдельные физические сети на основе отдельных коммутаторов,но заранее нельзя сказать сколько будет различных запросов на отдельные сети.Поэтому проще построить одну сеть на всех а дальше разделить ее на отдельные логические сегменты. Что хорошего можно получить от изоляции сети:безопастность, распределение нагрузки, ограничение широковещательного трафика-если коммутатор не знает адрес получателя, то отправляет кадр на все порты в рамках логического сегмента.
Для обозначения виртаульных сетей часто используются разные цвета(картинка vlan.png), к одному коммутатору подключены компы из разных vlan которые отмечены разными цветами.Копмы из разных vlan могут общаться только между собой и не могут отправить данные компам из другой vlan.Как это реализуется на уровне коммутатора?Рисунок vlan_commutation_table.png показывает таблицу коммутации в которой добавлен новый столбец VLAN(идентификатор vlan) , на нам показано на каком порту какой мак адрес компа какой vlan принадлежит.При попытке передать кадр в другую vlan подсеть даже при наличии мак-адреса, коммутатор все равно не передаст кадр.Подход с таблицей коммутации где есть номера vlan хорошо работает если сеть построена на одном коммутаторе, но что делать 
если в сети используется два или больше коммутаторов?Когда кадр передается от одного коммутатора к другому, необходима инфа о том к какому vlan относится передаваемый кадр. Инфу о номере vlan необходимо включать в кадр. С другой стороны формат кадра ethernet заданный стандартом IEEE не имеет места для идентификатора vlan.Для включения номера vlan в кадр, необходимо было внести изменения в формат кадра, его внести в IEEE 802.1Q.При этом нельзя было просто добавить еще поле для номера vlan, так как необходимо обеспечить совместимость со всем существующим оборудованием. В стандарте IEEE 802.1Q было предложено в поле тип кадра вместо протокола верхнего уровня вставлять специальное значение в hex виде 0X8100-указатель, что кадр с VLAN.Далее в части где в 
стандартном кадре хранятся данные-идет поле из двух байт, которое содержит так называемый тег и еще два байта поле куда записывается код протолока вышестоящего уровня.Первоначально сетевые адаптеры не поддерживали формат стандарт IEEE 802.1Q, поэтому инфу о номере влана  добавлялась коммутаторами и использовалась только коммутаторами. Рассмотрим процесс передачи с использованием стандарта IEEE 802.1Q.Сетевой адаптер в компе генерит ethernet-кадр, внутри которого вложен ip-пакет, поле тип протокола следующего уровня содержит значение 0x0800, коммутатор получает этот кадр, понимает что этот кадр получен от компа из другого vlan, допустим комп находится в vlan сети с номером 2.Коммутатор добавляет служебные поля:в поле тип протокола следующего уровня значение 0x8100,
добавляется тег-номер vlan 2, затем записывается код протокола следующего уровня 0x0800 чтобы потом его можно было восстановить.Принимающий коммутатор извлекает инфу о vlan, понимает что кадр был отправлен в vlan с номером 2.После этого коммутатор удаляет инфу о номере vlan, и восстанавливает предыдущий протокол следующего уровня 0x0800 и такой кадр пересылается компу во 2 сети vlan.В текущее время почти все сетевые адаптеры поддерживают стандарт 802.1Q и уже сам сетевой адаптер компа сам может вставить необходимые поля в кадр:тег-номер vlan и протокол следующего уровня 0x8100.
	Есть два типа vlan:
1)нетегированный-номер vlan в таблице коммутации
2)тегированный-если ваша сеть состоит из нескольких коммутаторов то ,номер vlan в кадре(стандарт IEEE 802.1Q)
	Протокол STP
	Прежде рассмотрим, допускается ли в ethernet кольцевое соединение коммутаторов.Допустим в сети есть 4 коммутатора и они соединены четырьмя кабелями в кольцо.Вопрос в том, может ли работать такая сеть?Нет , такая сеть работать не может,так как в ней возникает широковещательный шторм.Рассмотрим как он образуется.Пусть на один из портов коммутатора пришел кадр, коммутатор не знает куда его отсылать, у него нет записи в таблице коммутации. В этом случае коммутатор передаст кадр на все порты всех коммутаторов кроме того откуда этот кадр пришел. Компы к которым этот кадр пришел, отбросят его так как он не для них.Компы которые одновременно подключены к другим портам коммутаторов, передадут кадр через порты на другие компы которые подключены к другому коммутатору.Там поизойдет такая же 
ситуация как и с первым коммутатором.Длаее кадр будет передан на оставшийся коммутатор, при чем этот коммутатор получит уже две копии кадра. К сожалению у коммутатора нет никакого средства для орпеделения того что это две копии кадра или это два разных кадра с одинаковыми адресами отправителя и получателя. Поэтому каждый кадр будет передан на все порты кроме тех куда они пришли.Кроме того, те кадры которые пришли на порты коммутатора будут обменены между собой и отправлены снова в обратный путь на другие коммутаторы. Такая ситуация называется широковещательный шторм и из за него невозможно кольцевое соединение в сети ethernet.Протокол STP(Spanning Tree Protocol-протокол связующего дерева)-протокол ,который позволяет отключать на программном уровне некоторые соединения между коммутаторами, 
чтобы не образовывалось кольцо. Связующее дерево-дереов без циклов, которое содержит все вершины исходного графа.То есть связующее дерево содержит все наши исходные коммутаторы но не имеет циклов, что гарантирует работу. Протокол STP определен в стандарте IEEE 802.1D.Приемущества:
1)надежность , благодаря протоколу можно создавтаь несколько соединений между коммутаторами и это повышает надежность сети.Если по какой то причине одно соединение разорвется, то можно будет использовтаь другое соединение. 
2)Другое приемущество протокола STP состоит в том, что он защищает от случайных ошибок в конфигурации ethernet. 
	В модели взаимодействия открытых систем протокол STP находится на канальном уровне, он реализуется на коммутаторах.Рассмотрим работу протокола на прошлом примере.Пусть у нас также четыре коммутатора, соединены в кольцо.При это одно из соединений отключено на программном увровне.Кабель между коммутаторами есть, но он не используется для передачи данных. Таким образом широковещательный шторм не возникнет, но в случае если одно из соединений разорвется, протокол STP может 
автоматически включить заблокированное соединение и коммутатор по-прежнему сможет передавать данные в сеть. 
	Работа протокола STP состоит из трех этапов:
1)выбор корневого коммутатора
2)определение кратчайших путей до корневого коммутатора от всех остальных коммутаторов
3)отключение всех соединений кроме кратчайших
Для реализации протокола STP, коммутаторы обмениваются между собой сообщениями, которые называются BPDU.Такие сообщения отправлются всему коммутаторами в сети  которые  поддерживают протокол STP каждые 2 секунды.В качестве получателя используется групповой адрес STP: 01:80:c2:00:00:00.Все коммутаторы которые поддерживают STP принимают и обрабатывают кадры которые приходят на этот адрес.Сейчас посмотрим подробно как работает протокол STP:
1)выполняется выбор корневого коммутатора.Выбор выполняется исходя из идентификатора, выбор корневого выполняется на основе минимального идентификатора.Сейчас в качестве идентификатора коммутатора используется его мак-адрес, но может быть и другой критерй выбора корневого коммутатора(картинка select_commutator.png).На картинке в качестве идентификатора используются целые числа.В качестве корневого будет выбран коммутатор с BID=1.Как происходит выбор корневого коммутатора?На первом этапе коммутаторы ничего не знают про всю остальную сеть, соответственно каждый коммутатор считает себя корневым  и рассылает всем своим соседям сообщение о том что он корневой коммутатор.Получив сообщения от своих соседей, коммутаторы сравнивают идентификаторы в сообщении со своим идентификатором.Далее будет производтся рассылка 
минимального идентификатора который коммутаторы узнали от своих соседей.На этом этап выбора корневого коммутатора заканчивается
2)расчет кратчайших путей.Теперь необходимо расчитать все кратчайшие пути от всех коммутаторов до корневого коммутатора.Длина пути между коммутаорами определяется двумя критериями: количество промежуточных коммутаторов и скорость соединения.Расчет кратчайшего пути похож на выбор корневого коммутатора:все коммутаторы рассылают на все порты BPDU с минимальным расстоянием до корневого коммутатора.Расстояние между коммутаторами определено станадртатом IEEE 802.1D(картинка calculate_shortest_way).На первом этапе коммутаторы, соединенные с корневым определяют скорость соединения с этим коммутатором и выбирают соответсвующее значение расстояния. Предположим что у нас на картинке select_commutator.png соединение 1гб/с, в этом случае в качестве значения расстояния мы используем число 4.Картинка sending_distance.png показывает как происходит процесс обмена расстояниями между коммутаторами.
Коммутаторы подключенные к корневому коммутатору узнают скорость(1гб/с) соединения с этим коммутатором и выбирают соответсвующее значение расстояния (4).Затем это кратчайшее расстояние до корневого коммутатора пересылается последнему коммутатору который вычисляет скорость меежду ним и соседними коммутатороами(1гб/с) и присваивает расстояние от него до соседей и суммирует это расстояние с предыдущими прешедшими от сосденимх коммутаторов (4+4=8), таким образом мы знаем расстояние от всех портов до корневого коммутатора.
3)отключить одно из соединений чтобы не было кольца.Согласно работе протокола stp, если у нас есть два пути до корневого коммутатора, то мы должны выбрать путь с минимальной длинной а другой отключить.В нашем примере оба пути с одинаковой длинной.В этом случае отключатся тот путь у которого большое значение порта.
	На этом работа протокола STP завершена, у нас имеется связующее дерево.Все четыре коммутатора соединены между собой и кольца нет, однако если произойдет разраыв одного из соединенй то отключенное может автоматически включиться.
	Если мы используем протокол STP, то при подключении устройства к коммутатору нельзя сразу же начать передавать данные, ведь там может оказаться другой коммутатор и новое соединение может привести к созданию кольца.Для поддержания решения этой проблемы, коммутаторы которые поддерживают протокол STP используют несколько режимов работы портов.
1 этап)Listening-порт обрабатывает управляющие сообщения протокола STP(BPDU),но не передает данные 
2 этап)Learning-порт не передает кадры, но изучает MAC-адреса в поступающих кадрах и формирует таблицу коммутации
3 этап)forwarding-если выяснилось что к порту подключен комп или коммутатор без образования кольца то порт переходит в состояние передачи и приема при которой передает кадры и BPDU и приниает также все перечисленное.
4 этап)Blocking-если оказалось что к порту подключен коммутатор и образовалось кольцо, то порт переходит в состояние заблокироанного, порт блокируется на проргаммном уровне для того чтобы не было кольца
5 этап)disabled-кроме этого у админа есть возможность принудительно отключить порт переведя его в состояние disabled, в этом улчае данные не будут передаваться независимо от того что подключено к порту:компьютер/коммутатор с кольцом или без
	Переход от состояния Listening до forwarding занмает 30сек-достаточно долго для современных крупных и чатсо меняющихся сетей.В связи с чем был предложен новый протокол RSTP-улучшеная версия STP, срабатывает быстрее при подключении оборудования и изменении кофигурации сети, определен в стандарте IEEE 802.1w.Кроме этого возможны проблемы STP c VLAN, в исходном варианте STP ничего не знает про VLAN, поэтому соединения в разных vlan будут отключены.Для совместного использования STP с VLAN, необходимо чтобы для каждого VLAN связующее дерево строилось отдельно.Эту возможность реализовали в протоколе MSTP по стандарту 802.1s
	WI-FI
Технология передачи данных в беспроводных комп сетях, название wi-fi-торговая марка которая принадлежит компании wi-fi alliance.Описание технологии содержится в стандарте ieee 802.11.Чтобы производитель смог дать своему устройству название wi-fi, он должен пройти проверку в компании wi-fi alliance, эта компания проверяет насколько оборудование соответсвует стандарту ieee 802.11.Права использования торговой марки wi-fi дается после того как wi-fi alliance полностью все проверит и одобрит.В модели OSI wi-fi находтися на канальном и физическом также как и ethernet, при чем на канальном используются два подуровня mac и llc.WI-FI может воркать в двух режимах:инфоструктурный режим wi-fi и одноранговый режима.
Чаще всего используется инфоструктурный режим в котором используется беспроводное оборудование (точки доступа), которые подключаются к проводной сети и затем к интернет.Также возможен и другой вариант подключения-одноранговая сеть, где компы взаимодействуют без каких либо точек доступа напрямую друг с другом.Технология wi-fi очень похожа на технологию ethernet.Можно сказать что это ethernet адаптированный к беспроводной среде.Для адресации wi-fi используются mac-адреса.Для передачи данных используется разделяемая среда также как и в классическом ethernet, только в классическом ethernet сигнал передается по проводу а в wi-fi по беспроводной среде(радиэфир).Формат кадра уровня llc описан стандартом ieee 802.2 и совпадает с кадром ethernet.На практике это означает что если вы используете wirechark для перехвата пакетов, то независимо от того пришел ваш кадр из ethernet или wi-fi, его формат будет одинаковый, хотя в процессе передачи по беспроводной среде, на уровен mac используется другой формат кадров.
	Сначала мы рассмотрим физический уровень wi-fi.Есть несколько разных вариантов реализации физического уровня wi-fi, они описаны в шести стандартах в самой левой колонке картинки implementation_standarts.png.Сейчас wi-fi использует для передачи данных электромагнитное излучение и радиоэфир, но в первом варианте wi-wi(802.11) также использовалось инфрокрасное излучение.Но уже со второго поколения стандарта wi-fi(802.11b) используется только электромагнитное излучение.Применяются две частоты 2,4ГГц -802.11b,802.11g, 802.11n и 5 ГГц-802.11a, 802.11n и 802.11ac.Однако и другие устройства могут использовать эти частоты что может создавать помехи при передачи сигналов wi-fi.В современных стандартах wi-fi используется метод передаич данных мультиплексирование с ортогональным частотным разделением(OMFD).Данные передаются параллельно на разных частотах.Хотя частоты накладываются друг на друга, метод OMFD позволяет надежно распозновать сигналы.В диапазоне 2,4 ГГц для передачи данных используется 14 каналов(на картинке channel.png), на нижней строке картинки перечислены частоты. 
На картинке channel.png каналы сдвинуты друг относительно друга, но все равно частично перекрываются.Таким образом количество wi-fi сетей, которые находятся в одном и том же месте ограничено, их не может быть больше 14.Если в одной и тойже области будет работать больше чем 14 сетей, им не хватит каналов.Такая ситуация известна как wi-fi джунгли, и она довольно часто встречается.WI-fi может использовать каналы разной ширины.Ширина канала-разность между максимальной частотой и мнимальной частотой на которой можно передавать данные.Как мы рассматривали ранее, о физическом уровне,чем шире канал, тем более качественно можно передавать данные, и тем выше скорость передачи.В стандарте 802.11n появилась возможность испоьлзовать каналы шириной 40мгц и за счет этого увеличивать скорость передачи.В последнем стандарте wi-fi 802.11ac можно использовать более широкие каналы, 80мгц-160мгц.Однако поддержка канала в 160мгц обеспечивается по возможности и по желанию производителя.
	В стандарте 802.11n появилась возможность использовать несколько антен для передачи данных, эта возможность также есть и в современных стандартах(802.11n, 802.11ac).Если у нас есть несколько антен, то мы можем использовать несколько пространственных потоков-это сигнал, который передается от одной антены до другой, и если мы параллельно передаем несколько пр-ственных потоков, то скорость передачи данных увеличивается. При этом используется специальный метод кодироания сигналов который называется MIMO(multiple input multiple output-множественная передача и множественный прием).Пложим, что у нас есть три антены на передающей станции и три на принимающей.Каждая антена на передающей станции отрпавляет свой пр-ственный поток, таким образом можно увеличить скорость передачи в 3 раза.На принимающей станции все три антены принимают три пр-венных потока, и благодаря MIMO они умеют их разделять и повышать качество сигнала для каждого отдельного пр-нного потока.В ethernet скорокть работы оборудования фиксированная, это может быть 100мб, 1гб или другая скорость, но она будет одинакова для всех устройств в сети.
В wi-fi же позволяет менять скорость в зависимости от качества сигнала, если качество сигнала высокое то скорость увеличивается, иначе уменьшается. Для уменьшения/увеличения скорости, wi-fi меняет несколько параметров сигнала. Можно использовать разную ширину канала(от 20мгц-160мгц).wi-fi поддерживает различные модуляции, которые позволяют передавать данные с разной скоростью и с разной надежностью, а также есть возможность менять интервал данных между символами которые передатся по wi-fi.На картинке different_speed_for_one_spatial_thread.png показаны разные варианты скорости для одного пр-венного потока.Самая низкая скорость 6,5 мб/c получается при искользовании двоичной фазовой модуляции BPSK канала 20мгц и интевалом между символами 800nst
	Wi-fi метод доступа к разделяемой среде
Канальный уровень WI-FI-работает одинаково независимо от того какой стандарт физ-уровня используется.
	Радиоэфир по которому компы передают данные wi-fi, является разделяемой средой, и если компы начнут передавать данные одновременно то возникнут коллизии.В результате данные будут искажены и принять их невозможно. Таким образом нам необходим какой-то механизм для обеспечения согласованной передачи данных по разделяемой среде. Подобный механизм есть в ethernet, но в чистом виде его использоать нельзя так как в ethernet для передачи данных используются провода, а в wi-fi радиоэфир.Особенности беспроводной среды:вероятность возникновения ошибки в беспроводной среде гораздо выше чем в проводной.Также мощность сигнала который мы передаем гораздо больше чем мощность того сигнала который мы принимаем.Если параметры ethernet, в частности длна сети, подобраны так чтобы сигнал доходил до всех компов, в wi-fi же это обеспечить нельзя.Диапазон передатчиков беспроводной в среде ограничен поэтому не все компы в сети могут принимать передаваемые данные, это приводит к ряду проблем наиболее известные из которых-проблема скрытой и засвеченной станции. 
	Проблема скрытой станции, показана на критинке hidden_station.png.Допустим компы а и с хотят передавать данные компу б как на картинке hidden_station.png, кругаим показаны области действия передатчиков.Сигнал от компа А доходит до компа Б но не доходит до компа С.В wi-fi точно также также как и в ethernet компы перед передачей данных проверяют несущую частоту и смотрят не передает ли еще кто то данные, и если среда свободна то происходит передача. Но так как в wi-fi зона действия органичена , то может произойти следующее:комп А хочет передать данные компу Б, он проверил что никто не передает данные и начал передачу.В то же самое время комп С тоже решил передать данные, проверил несущую чатосту и убдеился что среда свободна и начал передачу однако когда данные дошли до компа Б то произошла коллизия из-за одновременной передачи данных компом А.Проблема засвеченной станции противоположна, комп не передает данные хотя может это сдедать.На картинке overexposed_station.png ,предположим что у нас 4 компа как на картинке, комп Б хочет передать данные компу А, а комп С хочет передать данные компу Д. Комп Д находтися вне зоны действия передатчика 
компа Б , поэтому комп С может смело передавать данные компу Д.Однако сам комп С находится в зоне передатчика компа Б , поэтому он считает что среда занята и ждет когда комп Б закончит передачу.
	Так как в беспроводной среде ошибки происходят чаще чем в проводной, то в wi-fi на канальном уровне используется подтверждение получения данных. Предположим что комп А решил передать данные компу Б по wi-fi.Комп А формирует кадр и передает его компу Б, комп Б получает кадр и передает компу А подтверждене что предыдущий кадр был получен и что можно передавать следующий.Комп А приготовил следущий кадр и предоложим что нам не повезло и что в тот же самый момент комп с тоже начал передачу, оба кадра дошли к компу Б и произошла коллизия, данный не могут быть приняты. Комп А при отправлении кадра установил таймер ожидания подтверждения, после истичения времени, тот же самый кадр отправляется еще раз.
	Теперь рассмотрим как в wi-fi происходит обнаружеие коллизий , но прежде вспомним как это делается в ethernet.В ethernet комп передает и принимает сингал одновременно, сравнивает их и если один разные то он отправляет jam-последовательность что усиливает коллизию.В wi-fi такой подход использовать нельзя:1)сигнал который мы передаем, намного мощнее чем тот который принимаем, 2)сигнал о коллизии может не дойти до всех компов, например, из-за проблем скрытой или засвеченной станции.Поэтому в wi-fi используется другой подход, коллизии обнаруживаются по отсутствию подтверждения получения кадра. Получается что в ethernet коллизии обходятся дешево, они обнаруживаются почти сразу и компы останавливают передачу данных.В wi-fi напротив, коллизии очень дорогие.Для обнаружения коллизии требуется гораздо больше времени.Необходимо передать кадр полностью и дождаться тайм-аута получения подтверждения.По этому в wi-fi используется метод CSMA/CA-множественный доступ с прослушиванием несущей частоты и предотвращением коллизий.
	Рассмотрим как устроен метод CSMA/CA (картинка CSMACA.png).Точно также как и в ethernet, перед началом передачи данных, компы в wi-fi прослушивают несущую частоту и смотрят, передает кто то данные или нет. Если кто то передает данные, происходит передача кадра, то все остальные компы ждут когда передача кадра закончится. В отличие от ethernet, в wi-fi после передачи кадра идет передача подтверждения.После этого все компы которые хотят передавать данные должны выдержать межкадроый интервал. В wi-fi есть два типа межкадровых интервалов:1)обычный и 2)короткий.Комп который хочет отправить данные, должен выдержать обычный межкадровый интервал, а комп который должен отправить подтверждение или еще какой служебный кадр, ждет в течении короткого межкадрового интервала.Именно за счет этого подтверждения отправляются быстрее чем другие кадры.В ethernet после того как межкадровый интервал завершен, начинается период конкуренции , компы начинают передавать данные, если произошла коллизии, они  тудже обнаруживаются и ждут некоторое время.Но в wi-fi так как коллизии обходятся очень дорого, вместо периода конкуренции используется период молчания, 
компы вместо того чтобы как можно быстрее начать передачу данных , наоборот стараются пропустить друг друга вперед чтобы избежать коллизии. Каждый комп выбирает разное время для периода молчания, случайным образом генерируется число так называемых слотов ожидания.Слот ожидания-промежуток времени в течении которого комп ждет, длина слота ожидания для различных стандартов физического уровня wi-fi количество слотов ожидания выбирается компами случайным образом. Первым начнает передачу комп который выбрал меньше всего слотов ожидания.CSMA/CA-основной метод доступа к разделяемой среде в котрой используется wi-fi, на практике он используется почти всегда но теоритически он не решает проблему скрытой и засвеченной станции , поэтому в wi-fi можно использовать другой метод доступа к среде который называется MACA(multiple access with collision avoidance), однако этот метод доступа опциональный и используется очень редко.Достоинчтва метода заключаются в том что: позволяет решить проблему скрытой и засвеченной станции.
	В чем состоти протокол MACA?
	Перед тем как передавать кадр с данными, комп должен отправить короткое управляющее сообщение которое называется Request to Send(RTS), в этот запрос включается размер данных, которые комп хочет передать и получатель в ответ, если он готов принять данные , отравляет такое же короткое управляющее сообщение которое называется Clear To Send(CTS) и в это же сообщение включается размер данных которые комп готов принять.Другие компы котрые получили CTS ждут пока закончится  передача данных.Они занют сколько времени потребуется на передачу данных так как размер данных включен в сообещение CTS и знают сколько времени нужно на передау подтверждения.Теперь рассмотрим как протокол MACA решает проблему скрытой и засвеченной станции.
	Начнем с проблемы скрытой станции(картинка MACA_hidden_station.png).Комп А перед передачей данных компу Б, высылает сообщение RTS и говорит что хочет передать 1500 байт.Комп Б передает в ответ управляющее сообщение CTS , это сообщение получает не только комп А но и комп С, который находится вне зоны действия передатчика компа А.Комп С понимает что сейчас другой комп, сигнал от которого он не видит, будет передавать данные размером 1500 байт, поэтому он ждет когда закончится передача данных.В это время комп А может смело передавать данные.Как решается проблема засвеченной станции(картинка MACA_overexposed_station.png)?Комп А и С передают сообещение RTS, комп Б передает компу А, а С передает компу Д.Далее А и Д передают CTS 1500байт.После этого А и Б могут передавать данные одновременно.
	Формат кадра wi-fi
	WI-FI также как и ethernet работает на физическом и канальном уровнях, причем на канальном уровне wi-fi использует два разных формата кадра на подуровне LLC и на подуровне MAC.На подуровне LLC формат кадра такойже как и в ethernet, а на подуровне MAC формат кадра отличается. При передаче по беспроводной среде используется именно формат кадра MAC(802.11), а преобразование в формат LLC происходит автоматически при получении, либо оборудованием, либо драйвером. 
	Рассмотрим как выглядит формат кадра wi-fi стандарта 802.11 уровня MAC(картинка frame_format_wifi_mac.png).Он устроен гораздо сложнее чем формат кадра ethernet, самая заметная разница-кадр wi-fi уровня mac использует 4 адреса.Почему в wi-fi сделано именно так ?Ранее мы уже говорили что wi-fi чаще всего используется в так называемом инфоструктурном режиме.Данне из беспроводной сети передаются в проводную сеть для последующей передачи. В инфоструктурном режиме чаще всего используется три устройства, 1-наш комп который передает данные по беспроводной среде, 2-точка доступа и 3-устройство в проводной среде которое обеспечивает подключение к интернет.
	В wi-fi адреса называются следующим образом:
1)DA-destination address-адрес получателя 
2)SA-Source address-адрес отправителя
3)RA-Recevier address-адрес получателя устройства из беспроводной среды 
4)TA-Transmitter address-адрес отправителя в беспроводную среду 
	Начнем с передачи кадра от нашего компа в проводную среду а затем в интернет.Проводная сеть к которой подключается наша сеть wi-fi называется распределительная система.Кадр передается от компа к проводному маршрутизатору и передает ее в интернет. В этом случае в первом поле адреса указывается мак-адрес точки доступа RA-адрес устройства который принимает данные из беспроводной среды.Второе поле адреса указывает мак-адрес точки доступа TA и в третьем поле указывается мак-адрес отправителя-мак адрес маршрутизатора.
	Если сеть работает в одноранговом режиме, компы передают данные друг другу, в этом случае в первом поле адрес получателя DA всегда совпадает с адресом приемного устройства RA, а адрес отправителя SA с адресом передающего устройства TA.В третьем поле узкаывается адрес одноранговой сети который генерируется автоматически.Четыре адреса в заголовке wi-fi кадра используются очень редко в ситуации которая называется беспроводной мост(картинка wireless_bridge.png).У нас есть два проводных компа которые передают данные друг другу, при чем передают данные через безпроводную сеть которая объединяет две проводные сети. Адрес отправителя проводной сети указывается как поле SA.Адрес проводного получателя-поле 3 DA.Точка доступа отправителя-второе поле TA, и точка доступа получателя RA-первое поле адреса.После четвертого поле адреса идет поле-тело кадра.Еще одно отличие кадра wi-fi от ethernet-максимальный размер поля данных 2304 байт. После поля данных идет поле контрольной суммы назначение и формта у которой такой же как и в ethernet, и если контрольная сумма некорректная то такой кадр отбрасывается(картинка frame_format_wifi_wireless_bridge.png).Поле длительность используется совместно с управляющими кадрами,например, кадрами протокола доступа к среде MACA и в этом поле указывается на какое время зарезервирован канал передачи данных wi-fi.Пока это время не кончилось, комп может пользоваться каналом не опасаясь коллизий.
	Давайте более подробно рассмотрим поле управление кадра(control_field_frame.png).Это поле состоит из большого числа маленьких полей.
1)Версия протокола-сейчас используется версия 0, остальные зарезервированы для будущих версий
2)тип и подтип кадра.В отличие от ethernet в wi-fi используется три типа кадра:
	1)кадр данных-такие же как в ethernet
	2)кадры контроля-сдужебные кадры для обеспечения работы wi-fi
	3)кадры управления-используются для реализации сервисов wi-fi таких как например подключение к точек доступа wi-fi или аутентификации.
3)Затем идут два флага to DS(к распределительной системе, от беспроводного компа к проводной распределительной системе) и from DS(от распределительной системы, от проводной к беспроводной) которые указывают направление передачи кадра
	На прошлых лекциях мы уже рассматривали такую особенность беспроводной среды как частое возникновение ошибок, однако что делать если ошибки встречаются особенно часто?	Например одна ошибка на каждую 1000 байт, можно ли в таком случае передавать данные, ведь в таком случае размер данных в кадре ~2000 байт и даже размер данных в кадре wi-fi ~1500 байт.То есть при передаче каждого кадра у нас скорее всего произойдет коллизия.В таком случае можно разбивать кадры на фрагменты размер каждого из которых будет меньше чем для возникновения ошибки.Но тогда скорость передачи падает. Такое разбиение кадра на фрагменты называется фрагментация.
	В wi-fi для фрагментации используется два поля заголовка:
	1)Поле MF(more fragments)
	2)Поле управления очередностью, оно состоит из двух подполей:
		1)номер последовательности-содержит номер кадра, который разбивается на отдельные фрагменты.Для всех фрагментов одного кадра номер последовательности будет одинаковым  
		2)номер фрагмента
	Рассмотрим как эти поля заголовка кадра wi-fi используются при фрагментации(картинка wifi_frame_fragmentationpng):
Допустим у нас есть кадр размером 1500 байт, но передать полностью мы его не можем. Разбиваем его на три отдельные части по 500 байт.Что просходит в этом случае.Передается три отдельных кадра, в поле номер последовательности у них одинаковый идентификатор, на картинке это значение 39876.Принимающая сторона поймет что принимает три фрагмента одного кадра.Флаг MF говорит о том что будут еще фрагменты, этот флаг установлен при передаче первого фрагмента, второго ,а у третьего он установлен в 0 так как больше фрагментов не будет. И подполе номер фрагмента поля управления последовательностью сообщает в какой последовательности надо собирать из фрагментов кадр.
4)флаг RT-говорит о том что происходит повторная отправка кадра.Повторная отправка выплняется если отправитель не получил подтверждение о получении.Однако может возникнуть ситуация когда получатель получил кадр однако подтверждение не дошло до отправителя.В этом случае отправитель передает заново тот же самый кадр и устанавливает флаг RT.Получатель принимает кадр, видит что установлен флаг RT и понимает что надо повтороно отправить подтверждение
5)следующие два поля используются для управления питанием(power mgmt и MD).WI-FI сейчас часто используется в мобильных устройствах, а для этих устройств очень важно экономить энергию чтобы харядки хватило надолго.
	Технология экономии питания описана в стандарте IEEE 802.11 PSM.Станция wi-fi может работать в двух режимах:активный и спящий 
В спящем режиме станция не принимает и не передает данные, в активном же станция передает и принимает данные в любое время.Однако в спящем режиме происходит отключение питания и станция не может передавать и принимать данные.Станция сообщает точке доступа что она собирается переключиться в спящий режим,поэтому точка доступа не пытается передать полученные данные станции.После того как наша станция проснулась она подключается к точке доступа и спрашивает есть ли у точки доступа кадр для станции, и если такие кадры есть то они передаются из буфера точки доступа на станцию,после этого станция снова переходит в спящий режим и точка доступа записывает кадры в буфер.
	В заголовке wi-fi используются два поля для управления питанием:флаг power mgmt используется станцией чтобы сообщить точке доступа что станция использует управление питанием и работает в спящем режиме.Следующий флаг MD(mode data-есть еще данные) устанавливается точкой доступа при передаче кадра станции которая работает в режиме сохранения питания, при получении кадра в котором установлен этот флаг, станция узнает что у точки доступа есть еще кадры и запрашивает эти кадры у точки доступа.
6)флаг protection frame(защита кадра), применяется для того чтобы указать, используется шифрование данных или нет
7)флаг order(порядок), говорит о том сохраняется ли порядок передачи сообщений или нет, на практике в wi-fi кадры принимаются в том же порядке в котором они отправлются
	Сервисы WI-FI
В ethernet есть всего один тип сервисов-передача данных. Для того чтобы воспользоваться сетью ethernet, надо просто подключиться к ней проводом. 
	В wi-fi ситуация другая, сигнал распространяется не в закрытой среде по проводам, а в открытой среде по проводам, поэтому для организации надежной работы сети и защиту данных передаваемых в сети, в wi-fi кроме передачи данных используются доп сервисы:
1.Ассоциация-перед передачей данных в сети , к ней нужно подключиться 
2.Аутентификация-перед подключением к сети, пользователь должен залогиниться
3.передача данных
4.защита информации-так как данные в беспроводной сети доступны всем кто находится в зоне действия передатчика, то для защиты данных их нужно шифровать
	Давайте посмотрим как это все (basic_services_set )реализуется в wi-fi(картинка basic_set_services.png) а далее рассмотрим extended set serveces(картинка extended_set_services).
	В случае basic services set у нас есть одна точка доступа которая может использоваться сама по себе или быть подключена к распределительной системе для обеспечения доступа в интернет.В своем радиусе действия точка доступа рассылает идентификатор своего набора сервисов.Идентификатор базового набора сервисов-BSSID(basic service set identifaer)-просто МАК адрес точки доступа, кроме того рассылается идентификатор набора сервисов в понятном человеку виде SSID(service set indentifaer)-именно эти идентификаторы мы видим в списке доступных сетей когда пытаемся подключиться к wi-fi.
	Первый шаг, для использования wi-fi-аутентификация, для этого клиент высылает точке доступа кадр управления специального вида managment frame с запросом на аутентификацию, если запрос удовлетворил точку доступа, то точка высылает кдр с положительным ответом.В wi-fi возможны три режима аутентификации:
1.Открытая аутентификация-вход без пароля, также важно помнить что в таком случае не используется шифрование, и все данные могут быть доступны кому угодно
2.Personal-используется единиый пароль
3.enterprise-удобен для крупных предприятий, в этом случае каждый пользователь имеет свой идентификатор и пароль, которые хранятся в каком-нибудь сервире аутентификации 